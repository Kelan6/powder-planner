var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
import * as React from 'react';
import { ButtonGroup, Button } from '@progress/kendo-react-buttons';
import { capitalize } from './common';
/** @hidden */
export var RecurrenceRepeatOnWeekEditor = function (props) {
    var _a = __assign(__assign({}, defaultProps), props), value = _a.value, data = _a.data, onChange = _a.onChange, other = __rest(_a, ["value", "data", "onChange"]);
    var handleClick = function (event) {
        var newValue = Number(event.currentTarget.dataset.key);
        if (props.onChange) {
            props.onChange.call(undefined, value.some(function (i) { return i === newValue; })
                ? value.filter(function (i) { return i !== newValue; })
                : __spreadArray(__spreadArray([], value, true), [newValue], false));
        }
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(ButtonGroup, __assign({ width: 'auto' }, other), (props.data || defaultProps.data).map(function (item) {
            return (React.createElement(Button, { type: "button", key: item.value, "data-key": item.value, selected: value.some(function (v) { return v === item.value; }), togglable: true, onClick: handleClick }, capitalize(item.text)));
        }))));
};
var defaultProps = {
    data: [],
    value: []
};
RecurrenceRepeatOnWeekEditor.defaultProps = defaultProps;
