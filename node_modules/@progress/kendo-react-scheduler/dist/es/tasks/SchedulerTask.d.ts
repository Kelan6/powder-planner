import * as React from 'react';
import { Item, SchedulerTaskMouseEvent, EditableProp } from '../models';
/**
 * Represents the props of the KendoReact [SchedulerTask]({% slug api_scheduler_schedulertask %}) component.
 */
export interface SchedulerTaskProps extends Item {
    /** @hidden */
    _ref: React.RefObject<SchedulerTaskHandle | null>;
    /**
     * Specifies the `id` of the wrapping element of the SchedulerTask.
     */
    id?: string;
    /**
     * Specifies the `tabIndex` attribute of the wrapping element of the SchedulerTask.
     */
    tabIndex?: number | null;
    /**
     * Specifies the `className` attribute of the wrapping element of the SchedulerTask.
     *
     * The SchedulerSlot applies the following default className:
     * - `k-task`
     */
    className?: string;
    /**
     * Specifies the `style` object of the wrapping element of the SchedulerTask.
     */
    style?: React.CSSProperties;
    /**
     * Specifies the `children` of the SchedulerTask.
     *
     * Setting this property will override the default elements rendered by the SchedulerTask.
     */
    children?: React.ReactNode;
    /**
     * Overrides the `editable` prop of the `Scheduler` and the active view.
     */
    editable?: EditableProp | boolean;
    /**
     * Called when the `delete` icon is clicked.
     *
     * The `delete` icon is rendered only when `props.editable` or `props.editable.remove` is `true`
     */
    onRemoveClick?: (event: SchedulerTaskMouseEvent) => void;
}
/**
 * Represents the props of the KendoReact [SchedulerTask]({% slug api_scheduler_schedulertask %}) component.
 */
export interface SchedulerTaskHandle {
    element: HTMLDivElement | null;
    props: SchedulerTaskProps;
}
/**
 * Represents the default `task` component rendered by the [KendoReact Scheduler component]({% slug overview_scheduler %}).
 *
 * The SchedulerTask is the default representation of an event inside the [`AgendaView`]({% slug agenda_view_scheduler %}).
 */
export declare const SchedulerTask: React.ForwardRefExoticComponent<SchedulerTaskProps & React.RefAttributes<SchedulerTaskHandle>>;
