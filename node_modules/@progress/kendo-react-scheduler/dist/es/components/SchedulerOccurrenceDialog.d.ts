import * as React from 'react';
import { DataItem } from '../models';
export interface SchedulerOccurrenceDialogStateChangeEvent<T> {
    target: SchedulerOccurrenceDialogHandle;
    value: T;
    syntheticEvent: React.SyntheticEvent;
}
/**
 * Represents the props of the KendoReact [SchedulerOccurrenceDialog]({% slug api_scheduler_scheduleroccurrencedialog %}) component.
 */
export interface SchedulerOccurrenceDialogProps {
    /**
     * Specifies the `DataItem` currently being edited.
     */
    dataItem: DataItem;
    /**
     * Specifies if the dialog is for `remove` or `edit` action.
     */
    isRemove?: boolean;
    /**
     * Called when the `close` button is clicked.
     */
    onClose: (event: SchedulerOccurrenceDialogStateChangeEvent<DataItem | null>) => void;
    /**
     * Called when the `series` button is clicked.
     */
    onSeriesClick: (event: SchedulerOccurrenceDialogStateChangeEvent<DataItem | null>) => void;
    /**
     * Called when the `occurrence` button is clicked.
     */
    onOccurrenceClick: (event: SchedulerOccurrenceDialogStateChangeEvent<DataItem | null>) => void;
}
/**
 * Represent the `ref` of the SchedulerOccurrenceDialog component.
 */
export declare type SchedulerOccurrenceDialogHandle = {
    props: SchedulerOccurrenceDialogProps;
};
/**
 * Represents the default `occurrenceDialog` component rendered by the [KendoReact SchedulerEditItem component]({% slug api_scheduler_scheduleredititem  %}).
 */
export declare const SchedulerOccurrenceDialog: React.ForwardRefExoticComponent<SchedulerOccurrenceDialogProps & React.RefAttributes<SchedulerOccurrenceDialogHandle | null>>;
