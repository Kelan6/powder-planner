import * as React from 'react';
import * as ReactDOM from 'react-dom';
import { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';
import { useLocalization } from '@progress/kendo-react-intl';
import { messages, editorOccurrence, editorSeries, editorRecurringConfirmation, editorRecurringDialogTitle, deleteOccurrence, deleteSeries, deleteRecurringDialogTitle, deleteRecurringConfirmation } from '../messages';
import { canUseDOM } from '@progress/kendo-react-common';
import { Button } from '@progress/kendo-react-buttons';
/* eslint-disable max-len */
/**
 * Represents the default `occurrenceDialog` component rendered by the [KendoReact SchedulerEditItem component]({% slug api_scheduler_scheduleredititem  %}).
 */
export var SchedulerOccurrenceDialog = React.forwardRef(function (props, ref) {
    // tslint:enable:max-line-length
    var isRemove = props.isRemove, onClose = props.onClose, onSeriesClick = props.onSeriesClick, onOccurrenceClick = props.onOccurrenceClick;
    var target = React.useRef(null);
    React.useImperativeHandle(target, function () { return ({ props: props }); });
    React.useImperativeHandle(ref, function () { return target.current; });
    var localizationService = useLocalization();
    var localizeMessage = function (message) {
        return localizationService.toLanguageString(message, messages[message]);
    };
    var editOccurrenceMessage = localizeMessage(editorOccurrence);
    var editSeriesMessage = localizeMessage(editorSeries);
    var editRecurringConfirmationMessage = localizeMessage(editorRecurringConfirmation);
    var editRecurringDialogTitleMessage = localizeMessage(editorRecurringDialogTitle);
    var deleteOccurrenceMessage = localizeMessage(deleteOccurrence);
    var deleteSeriesMessage = localizeMessage(deleteSeries);
    var deleteRecurringDialogTitleMessage = localizeMessage(deleteRecurringDialogTitle);
    var deleteRecurringConfirmationMessage = localizeMessage(deleteRecurringConfirmation);
    var titleMessage = isRemove ? deleteRecurringDialogTitleMessage : editRecurringDialogTitleMessage;
    var confirmationMessage = isRemove ? deleteRecurringConfirmationMessage : editRecurringConfirmationMessage;
    var occurrenceMessage = isRemove ? deleteOccurrenceMessage : editOccurrenceMessage;
    var seriesMessage = isRemove ? deleteSeriesMessage : editSeriesMessage;
    var handleClose = React.useCallback(function (_a) {
        var syntheticEvent = _a.syntheticEvent;
        if (!onClose) {
            return;
        }
        onClose.call(undefined, { syntheticEvent: syntheticEvent, value: null, target: target.current });
    }, [onClose]);
    var handleSeriesClick = React.useCallback(function (syntheticEvent) {
        if (!onSeriesClick) {
            return;
        }
        onSeriesClick.call(undefined, { syntheticEvent: syntheticEvent, value: null, target: target.current });
    }, [onSeriesClick]);
    var handleOccurrenceClick = React.useCallback(function (syntheticEvent) {
        if (!onOccurrenceClick) {
            return;
        }
        onOccurrenceClick.call(undefined, { syntheticEvent: syntheticEvent, value: null, target: target.current });
    }, [onOccurrenceClick]);
    return canUseDOM
        ? ReactDOM.createPortal((React.createElement(Dialog, { title: titleMessage, onClose: handleClose },
            confirmationMessage,
            React.createElement(DialogActionsBar, null,
                React.createElement(Button, { onClick: handleOccurrenceClick }, occurrenceMessage),
                React.createElement(Button, { onClick: handleSeriesClick }, seriesMessage)))), document && document.body)
        : null;
});
SchedulerOccurrenceDialog.displayName = 'KendoReactSchedulerSchedulerOccurrenceDialog';
