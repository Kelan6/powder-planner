import * as React from 'react';
import { useCellSync, useItemsFocus, useSlotsFocus } from '../hooks';
import { classNames } from '@progress/kendo-react-common';
import { SchedulerViewContext } from '../context/SchedulerViewContext';
import { ITEMS_SELECT_ACTION, useItemsSelection } from '../hooks/use-items-selection';
import { useSlotsSelection, SLOTS_SELECT_ACTION } from '../hooks/use-slots-selection';
import { useCollection } from '@progress/kendo-react-common';
/**
 * @hidden
 */
export var BaseView = React.forwardRef(function (props, ref) {
    var element = React.useRef(null);
    React.useImperativeHandle(ref, function () { return element.current; });
    var _a = useCollection([]), items = _a[0], dispatchItems = _a[1];
    var _b = useCollection([]), slots = _b[0], dispatchSlots = _b[1];
    var _c = useItemsFocus(items), focusedItems = _c[0], dispatchFocusedItems = _c[1];
    var _d = useSlotsFocus(slots), focusedSlots = _d[0], dispatchFocusedSlots = _d[1];
    var _e = useItemsSelection(items), selectedItems = _e[0], dispatchSelectedItems = _e[1];
    var _f = useSlotsSelection(slots), selectedSlots = _f[0], dispatchSelectedSlots = _f[1]; // React.useState<React.RefObject<SchedulerSlotHandle>[]>([]);
    var handleSchedulerItemsSelectAction = React.useCallback(function (action, event) {
        dispatchSelectedSlots({ type: SLOTS_SELECT_ACTION.reset });
        dispatchSelectedItems(action, event);
    }, [dispatchSelectedItems, dispatchSelectedSlots]);
    var handleSchedulerSlotsSelectAction = React.useCallback(function (action, event) {
        dispatchSelectedItems({ type: ITEMS_SELECT_ACTION.reset }, event);
        dispatchSelectedSlots(action);
    }, [dispatchSelectedItems, dispatchSelectedSlots]);
    var className = React.useMemo(function () { return classNames('k-scheduler-layout k-scheduler-layout-flex', props.className); }, [props.className]);
    useCellSync({ element: element, selector: '.k-group-cell', attribute: 'data-depth-index', explicitDepth: true });
    useCellSync({ element: element, selector: '.k-side-cell', attribute: 'data-depth-index', explicitDepth: false });
    return (React.createElement(SchedulerViewContext, { props: props.props, ranges: props.ranges, items: [items, dispatchItems], slots: [slots, dispatchSlots], selectedItems: [selectedItems, handleSchedulerItemsSelectAction], selectedSlots: [selectedSlots, handleSchedulerSlotsSelectAction], focusedItems: [focusedItems, dispatchFocusedItems], focusedSlots: [focusedSlots, dispatchFocusedSlots] },
        React.createElement("div", { ref: element, style: props.style, className: className, role: "presentation" }, props.children)));
});
BaseView.displayName = 'KendoReactSchedulerBaseView';
