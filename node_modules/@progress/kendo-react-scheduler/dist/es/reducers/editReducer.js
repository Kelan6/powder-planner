var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/** @hidden */
export var EDIT_INITIAL_STATE = {
    dataItem: undefined,
    drop: false,
    editDialog: false,
    occurrenceDialog: false,
    removeDialog: false,
    removeOccurrenceDialog: false
};
/** @hidden */
export var EDIT_ACTIONS;
(function (EDIT_ACTIONS) {
    EDIT_ACTIONS[EDIT_ACTIONS["CREATE"] = 0] = "CREATE";
    EDIT_ACTIONS[EDIT_ACTIONS["EDIT"] = 1] = "EDIT";
    EDIT_ACTIONS[EDIT_ACTIONS["EDIT_OCCURRENCE"] = 2] = "EDIT_OCCURRENCE";
    EDIT_ACTIONS[EDIT_ACTIONS["EDIT_CONFIRM"] = 3] = "EDIT_CONFIRM";
    EDIT_ACTIONS[EDIT_ACTIONS["EDIT_DROP_OCCURRENCE"] = 4] = "EDIT_DROP_OCCURRENCE";
    EDIT_ACTIONS[EDIT_ACTIONS["REMOVE"] = 5] = "REMOVE";
    EDIT_ACTIONS[EDIT_ACTIONS["REMOVE_OCCURRENCE"] = 6] = "REMOVE_OCCURRENCE";
    EDIT_ACTIONS[EDIT_ACTIONS["REMOVE_CONFIRM"] = 7] = "REMOVE_CONFIRM";
    EDIT_ACTIONS[EDIT_ACTIONS["RESET"] = 8] = "RESET";
})(EDIT_ACTIONS || (EDIT_ACTIONS = {}));
/** @hidden */
export var editReducer = function (state, action) {
    var newState;
    switch (action.type) {
        case EDIT_ACTIONS.CREATE:
            newState = __assign(__assign({}, state), { dataItem: action.payload, editDialog: true });
            break;
        case EDIT_ACTIONS.EDIT:
            newState = __assign(__assign({}, state), { dataItem: action.payload, editDialog: true, occurrenceDialog: false });
            break;
        case EDIT_ACTIONS.EDIT_OCCURRENCE:
            newState = __assign(__assign({}, state), { dataItem: action.payload, occurrenceDialog: true });
            break;
        case EDIT_ACTIONS.EDIT_DROP_OCCURRENCE:
            newState = __assign(__assign({}, state), { dataItem: action.original, drop: action.payload, occurrenceDialog: true });
            break;
        case EDIT_ACTIONS.REMOVE:
            newState = __assign(__assign({}, state), { dataItem: action.payload, removeDialog: true });
            break;
        case EDIT_ACTIONS.REMOVE_OCCURRENCE:
            newState = __assign(__assign({}, state), { dataItem: action.payload, removeOccurrenceDialog: true });
            break;
        case EDIT_ACTIONS.EDIT_CONFIRM:
        case EDIT_ACTIONS.REMOVE_CONFIRM:
        case EDIT_ACTIONS.RESET:
            newState = __assign({}, EDIT_INITIAL_STATE);
            break;
        default:
            newState = __assign({}, EDIT_INITIAL_STATE);
    }
    return newState;
};
