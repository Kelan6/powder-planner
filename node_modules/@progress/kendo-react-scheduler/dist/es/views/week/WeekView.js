var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { MultiDayView } from '../day/MultiDayView';
import { DAYS_IN_WEEK_COUNT } from '../../constants';
import { getDate, addDays, ZonedDate, firstDayInWeek } from '@progress/kendo-date-math';
import { weekViewTitle, messages } from '../../messages';
import { toUTCDateTime } from '../../utils';
/**
 * Represents the KendoReact [WeekView]({% slug week_views_scheduler %}) Component.
 */
export var WeekView = function (props) { return (React.createElement(MultiDayView, __assign({}, props, { step: DAYS_IN_WEEK_COUNT, numberOfDays: props.numberOfDays }))); };
var GET_START_DATE = function (date) { return getDate(date); };
var GET_END_DATE = function (start, numberOfDays) { return getDate(addDays(start, numberOfDays || 1)); };
var weekViewDateRange = function (_a) {
    var intl = _a.intl, date = _a.date, timezone = _a.timezone;
    var normalized = ZonedDate.fromLocalDate(date, timezone);
    var firstDate = GET_START_DATE(firstDayInWeek(normalized, intl.firstDay()));
    var lastDate = GET_END_DATE(firstDate, DAYS_IN_WEEK_COUNT);
    var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDate), timezone);
    var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDate), timezone);
    var start = new Date(zonedStart.getTime());
    var end = new Date(zonedEnd.getTime());
    return {
        start: start,
        end: end,
        zonedStart: zonedStart,
        zonedEnd: zonedEnd
    };
};
/** @hidden */
export var defaultProps = {
    name: 'week',
    slotDuration: 60,
    slotDivisions: 2,
    numberOfDays: DAYS_IN_WEEK_COUNT,
    dateRange: weekViewDateRange,
    title: function (localization) { return localization.toLanguageString(weekViewTitle, messages[weekViewTitle]); },
    selectedDateFormat: '{0:D} - {1:D}',
    selectedShortDateFormat: '{0:d} - {1:d}'
};
WeekView.defaultProps = defaultProps;
WeekView.displayName = 'KendoReactSchedulerWeekView';
