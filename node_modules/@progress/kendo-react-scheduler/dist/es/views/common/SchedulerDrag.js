var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { toItems, toOccurrences } from '../../services';
import { SchedulerItem } from '../../items/SchedulerItem';
import { SchedulerViewItem } from '../../items/SchedulerViewItem';
import { useSchedulerViewRangesContext, useSchedulerViewSlotsContext } from '../../context';
import { useSchedulerPropsContext, useSchedulerGroupsContext, useSchedulerFieldsContext, useSchedulerDateRangeContext } from '../../context/SchedulerContext';
import { mapItemsToSlots } from '../../utils';
/**
 * Represents the default `drag` component rendered by the [KendoReact SchedulerEditItem component].
 */
export var SchedulerDrag = function (props) {
    var ranges = useSchedulerViewRangesContext();
    var timezone = useSchedulerPropsContext().timezone;
    var groups = useSchedulerGroupsContext();
    var fields = useSchedulerFieldsContext();
    var dateRange = useSchedulerDateRangeContext();
    var viewSlots = useSchedulerViewSlotsContext()[0];
    var ViewItem = props.viewItem || defaultProps.viewItem;
    var occurrences = React.useMemo(function () { return toOccurrences([props.dataItem], { dateRange: dateRange, fields: fields, timezone: timezone }); }, [props.dataItem, dateRange, fields, timezone]);
    var items = React.useMemo(function () { return toItems(occurrences, { timezone: timezone }, { groups: groups, ranges: ranges }); }, [occurrences, timezone, groups, ranges]);
    var slots = (viewSlots || []).map(function (s) { return s.current.props; });
    mapItemsToSlots(items, slots);
    return (React.createElement(React.Fragment, null, items.map(function (item, idx) { return (React.createElement(ViewItem, __assign({ key: idx }, item, { item: props.item, dragHint: true, vertical: props.vertical, ignoreIsAllDay: props.ignoreIsAllDay }))); })));
};
var defaultProps = {
    viewItem: SchedulerViewItem,
    item: SchedulerItem
};
SchedulerDrag.defaultProps = defaultProps;
SchedulerDrag.displayName = 'KendoReactSchedulerDrag';
