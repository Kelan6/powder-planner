import { DataItem } from '../../models';
/**
 * Represents the available `action` types for the `SchedulerItemResizeItemAction` objects.
 *
 * The available types are:
 * - `RESIZE_ITEM_SET`
 * - `RESIZE_ITEM_START`
 * - `RESIZE_ITEM_START_DRAG`
 * - `RESIZE_ITEM_START_DRAG_SELECTED`
 * - `RESIZE_ITEM_END_DRAG`
 * - `RESIZE_ITEM_END_DRAG_SELECTED`
 * - `RESIZE_ITEM_COMPLETE`
 * - `RESIZE_ITEM_COMPLETE_OCCURRENCE`
 * - `RESIZE_ITEM_COMPLETE_SERIES`
 * - `RESIZE_ITEM_RESET`
 */
export declare enum RESIZE_ITEM_ACTION {
    set = "RESIZE_ITEM_SET",
    start = "RESIZE_ITEM_START",
    startDrag = "RESIZE_ITEM_START_DRAG",
    startDragSelected = "RESIZE_ITEM_START_DRAG_SELECTED",
    endDrag = "RESIZE_ITEM_END_DRAG",
    endDragSelected = "RESIZE_ITEM_END_DRAG_SELECTED",
    complete = "RESIZE_ITEM_COMPLETE",
    completeOccurrence = "RESIZE_ITEM_COMPLETE_OCCURRENCE",
    completeSeries = "RESIZE_ITEM_COMPLETE_SERIES",
    reset = "RESIZE_ITEM_RESET"
}
/**
 * Represents the object passed to the `resize-item` reducer.
 */
export interface SchedulerItemResizeItemAction {
    type: RESIZE_ITEM_ACTION;
    payload?: DataItem;
    event?: any;
}
/** @hidden */
export declare const useResizeItem: (config: {
    dataItem: DataItem;
    onDataAction: any;
}, state: [
    DataItem,
    DataItem,
    any
]) => any[];
