"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchedulerRemoveDialog = void 0;
var React = require("react");
var ReactDOM = require("react-dom");
var kendo_react_dialogs_1 = require("@progress/kendo-react-dialogs");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
/* eslint-disable max-len */
/**
 * Represents the default `removeDialog` component rendered by the [KendoReact SchedulerEditItem component]({% slug api_scheduler_scheduleredititem  %}).
 */
exports.SchedulerRemoveDialog = React.forwardRef(function (props, ref) {
    // tslint:enable:max-line-length
    var onClose = props.onClose, onCancel = props.onCancel, onConfirm = props.onConfirm;
    var target = React.useRef(null);
    React.useImperativeHandle(target, function () { return ({ props: props }); });
    React.useImperativeHandle(ref, function () { return target.current; });
    var localization = (0, kendo_react_intl_1.useLocalization)();
    var removeCancelMessage = localization.toLanguageString(messages_1.editorCancel, messages_1.messages[messages_1.editorCancel]);
    var removeConfirmMessage = localization.toLanguageString(messages_1.editorDelete, messages_1.messages[messages_1.editorDelete]);
    var removeMessage = localization.toLanguageString(messages_1.deleteConfirmation, messages_1.messages[messages_1.deleteConfirmation]);
    var deleteDialogTitleMessage = localization.toLanguageString(messages_1.deleteDialogTitle, messages_1.messages[messages_1.deleteDialogTitle]);
    var handleClose = React.useCallback(function (_a) {
        var syntheticEvent = _a.syntheticEvent;
        if (!onClose) {
            return;
        }
        var ev = {
            syntheticEvent: syntheticEvent,
            value: null,
            target: target.current
        };
        onClose.call(undefined, ev);
    }, [onClose]);
    var handleCancel = React.useCallback(function (syntheticEvent) {
        if (!onCancel) {
            return;
        }
        onCancel.call(undefined, { syntheticEvent: syntheticEvent, value: null });
    }, [onCancel]);
    var handleConfirm = React.useCallback(function (syntheticEvent) {
        if (!onConfirm) {
            return;
        }
        onConfirm.call(undefined, { syntheticEvent: syntheticEvent, value: null });
    }, [onConfirm]);
    return kendo_react_common_1.canUseDOM
        ? ReactDOM.createPortal((React.createElement(kendo_react_dialogs_1.Dialog, { title: deleteDialogTitleMessage, onClose: handleClose },
            removeMessage,
            React.createElement(kendo_react_dialogs_1.DialogActionsBar, null,
                React.createElement(kendo_react_buttons_1.Button, { onClick: handleCancel }, removeCancelMessage),
                React.createElement(kendo_react_buttons_1.Button, { onClick: handleConfirm }, removeConfirmMessage)))), document && document.body)
        : null;
});
exports.SchedulerRemoveDialog.displayName = 'KendoReactSchedulerRemoveDialog';
