"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultRowContent = exports.HorizontalResourceIterator = void 0;
var React = require("react");
var utils_1 = require("./utils");
var constants_1 = require("../../constants");
var SchedulerResourceIteratorContext_1 = require("../../context/SchedulerResourceIteratorContext");
/** @hidden */
var HorizontalResourceIterator = function (props) {
    var nested = props.nested, children = props.children, rowContentProps = props.rowContentProps;
    var rowContent = props.rowContent || exports.DefaultRowContent;
    var childRowContent = props.childRowContent || rowContent;
    var resources = (0, utils_1.toGroupResources)(props.group, props.resources);
    var groupIndex = 0;
    return (React.createElement("div", { className: "k-scheduler-group k-group-horizontal" }, nested
        ? renderResourcesRecursively({ resources: resources, children: children, nested: nested, groupIndex: groupIndex, rowContent: rowContent, rowContentProps: rowContentProps, childRowContent: childRowContent })
        : renderResources({ resources: resources, children: children, rowContent: rowContent, nested: !!nested, groupIndex: groupIndex, rowContentProps: rowContentProps, childRowContent: childRowContent })));
};
exports.HorizontalResourceIterator = HorizontalResourceIterator;
var renderResourcesRecursively = function (args) {
    var resources = args.resources, rowContent = args.rowContent, nested = args.nested, children = args.children, groupIndex = args.groupIndex, rowContentProps = args.rowContentProps, childRowContent = args.childRowContent;
    if (groupIndex === resources.length) {
        return renderResources({ resources: resources, rowContent: rowContent, children: children, nested: nested, groupIndex: groupIndex, rowContentProps: rowContentProps, childRowContent: childRowContent });
    }
    var expandedResources = (0, utils_1.expandResources)(resources, groupIndex);
    var RowContent = rowContent;
    return (React.createElement(React.Fragment, null,
        nested
            ? (React.createElement("div", { className: "k-scheduler-row" },
                React.createElement(RowContent, __assign({ resources: resources, groupIndex: groupIndex }, rowContentProps), expandedResources.map(function (expandedResource, expandedResourceIndex) { return (React.createElement("div", { key: expandedResourceIndex, className: "k-scheduler-cell k-heading-cell" }, expandedResource.text)); }))))
            : (React.createElement(RowContent, __assign({ resources: resources, groupIndex: groupIndex }, rowContentProps), expandedResources.map(function (expandedResource, expandedResourceIndex) { return (React.createElement("div", { key: expandedResourceIndex, className: "k-scheduler-cell k-heading-cell" }, expandedResource.text)); }))),
        renderResourcesRecursively({
            resources: resources,
            children: children,
            nested: nested,
            rowContent: rowContent,
            childRowContent: childRowContent,
            groupIndex: groupIndex + 1
        })));
};
var renderResources = function (args) {
    var resources = args.resources, childRowContent = args.childRowContent, children = args.children, rowContentProps = args.rowContentProps;
    var deepestResources = (0, utils_1.expandResources)(resources, resources.length - 1);
    var ChildRowContent = childRowContent;
    var hasGroups = resources.length > 0;
    return (React.createElement("div", { className: "k-scheduler-row" },
        React.createElement(ChildRowContent, __assign({ resources: resources }, rowContentProps), (deepestResources.length ? deepestResources : constants_1.EMPTY_RESOURCE).map(function (resource, groupIndex) { return (React.createElement("div", { key: groupIndex, className: "k-scheduler-cell k-group-cell" },
            React.createElement(SchedulerResourceIteratorContext_1.SchedulerResourceIteratorContext.Provider, { value: { resource: resource, groupIndex: hasGroups ? groupIndex : 0 } }, children))); }))));
};
exports.HorizontalResourceIterator.displayName = 'KendoReactSchedulerHorizontalResourceIterator';
/** @hidden */
var DefaultRowContent = function (props) { return props.children; };
exports.DefaultRowContent = DefaultRowContent;
