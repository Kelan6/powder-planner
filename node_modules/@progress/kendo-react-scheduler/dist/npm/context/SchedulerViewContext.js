"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchedulerViewContext = exports.useSchedulerViewFocusedSlotsContext = exports.SchedulerViewFocusedSlotsContext = exports.useSchedulerViewFocusedItemsContext = exports.SchedulerViewFocusedItemsContext = exports.useSchedulerViewSelectedItemsContext = exports.SchedulerViewSelectedItemsContext = exports.useSchedulerViewSelectedSlotsContext = exports.SchedulerViewSelectedSlotsContext = exports.useSchedulerViewItemsContext = exports.SchedulerViewItemsContext = exports.useSchedulerViewSlotsContext = exports.SchedulerViewSlotsContext = exports.useSchedulerViewRangesContext = exports.SchedulerViewRangesContext = exports.useSchedulerViewPropsContext = exports.SchedulerViewPropsContext = void 0;
var React = require("react");
var utils_1 = require("../utils");
/** @hidden */
exports.SchedulerViewPropsContext = React.createContext({});
/** @hidden */
var useSchedulerViewPropsContext = function () { return React.useContext(exports.SchedulerViewPropsContext); };
exports.useSchedulerViewPropsContext = useSchedulerViewPropsContext;
exports.SchedulerViewPropsContext.displayName = 'SchedulerViewPropsContext';
/** @hidden */
exports.SchedulerViewRangesContext = React.createContext([]);
/** @hidden */
var useSchedulerViewRangesContext = function () { return React.useContext(exports.SchedulerViewRangesContext); };
exports.useSchedulerViewRangesContext = useSchedulerViewRangesContext;
exports.SchedulerViewRangesContext.displayName = 'SchedulerViewRangesContext';
/** @hidden */
exports.SchedulerViewSlotsContext = React.createContext([[], utils_1.noop]);
/** @hidden */
var useSchedulerViewSlotsContext = function () { return React.useContext(exports.SchedulerViewSlotsContext); };
exports.useSchedulerViewSlotsContext = useSchedulerViewSlotsContext;
exports.SchedulerViewSlotsContext.displayName = 'SchedulerViewSlotsContext';
/** @hidden */
exports.SchedulerViewItemsContext = React.createContext([[], utils_1.noop]);
/** @hidden */
var useSchedulerViewItemsContext = function () { return React.useContext(exports.SchedulerViewItemsContext); };
exports.useSchedulerViewItemsContext = useSchedulerViewItemsContext;
exports.SchedulerViewItemsContext.displayName = 'SchedulerViewItemsContext';
/** @hidden */
exports.SchedulerViewSelectedSlotsContext = React.createContext([[], utils_1.noop]);
/** @hidden */
var useSchedulerViewSelectedSlotsContext = function () { return React.useContext(exports.SchedulerViewSelectedSlotsContext); };
exports.useSchedulerViewSelectedSlotsContext = useSchedulerViewSelectedSlotsContext;
exports.SchedulerViewSelectedSlotsContext.displayName = 'SchedulerViewSelectedSlotsContext';
/** @hidden */
exports.SchedulerViewSelectedItemsContext = React.createContext([[], utils_1.noop]);
/** @hidden */
var useSchedulerViewSelectedItemsContext = function () { return React.useContext(exports.SchedulerViewSelectedItemsContext); };
exports.useSchedulerViewSelectedItemsContext = useSchedulerViewSelectedItemsContext;
exports.SchedulerViewSelectedItemsContext.displayName = 'SchedulerViewSelectedItemsContext';
/** @hidden */
exports.SchedulerViewFocusedItemsContext = React.createContext([[], utils_1.noop]);
/** @hidden */
var useSchedulerViewFocusedItemsContext = function () { return React.useContext(exports.SchedulerViewFocusedItemsContext); };
exports.useSchedulerViewFocusedItemsContext = useSchedulerViewFocusedItemsContext;
exports.SchedulerViewFocusedItemsContext.displayName = 'SchedulerViewFocusedItemsContext';
/** @hidden */
exports.SchedulerViewFocusedSlotsContext = React.createContext([[], utils_1.noop]);
/** @hidden */
var useSchedulerViewFocusedSlotsContext = function () { return React.useContext(exports.SchedulerViewFocusedSlotsContext); };
exports.useSchedulerViewFocusedSlotsContext = useSchedulerViewFocusedSlotsContext;
exports.SchedulerViewFocusedSlotsContext.displayName = 'SchedulerViewFocusedSlotsContext';
/** @hidden */
var SchedulerViewContext = function (_a) {
    var children = _a.children, 
    // Static
    props = _a.props, ranges = _a.ranges, 
    // Ref
    slots = _a.slots, items = _a.items, 
    // State
    // State.Selection
    selectedSlots = _a.selectedSlots, selectedItems = _a.selectedItems, 
    // State.Focus
    focusedItems = _a.focusedItems, focusedSlots = _a.focusedSlots;
    return (React.createElement(exports.SchedulerViewPropsContext.Provider, { value: props },
        React.createElement(exports.SchedulerViewRangesContext.Provider, { value: ranges },
            React.createElement(exports.SchedulerViewSlotsContext.Provider, { value: slots },
                React.createElement(exports.SchedulerViewItemsContext.Provider, { value: items },
                    React.createElement(exports.SchedulerViewSelectedSlotsContext.Provider, { value: selectedSlots },
                        React.createElement(exports.SchedulerViewSelectedItemsContext.Provider, { value: selectedItems },
                            React.createElement(exports.SchedulerViewFocusedItemsContext.Provider, { value: focusedItems },
                                React.createElement(exports.SchedulerViewFocusedSlotsContext.Provider, { value: focusedSlots }, children)))))))));
};
exports.SchedulerViewContext = SchedulerViewContext;
