import * as React from 'react';
import { SchedulerViewProps, Range } from '../models';
import { SchedulerItemsFocusAction, SchedulerSlotsFocusAction } from '../hooks';
import { SchedulerSlotHandle, SchedulerItemHandle } from '../main';
import { SchedulerItemsSelectAction } from '../hooks/use-items-selection';
import { SchedulerSlotsSelectAction } from '../hooks/use-slots-selection';
import { CollectionAction } from '@progress/kendo-react-common';
/**
 * @hidden
 */
export interface SchedulerViewContextProps {
    children?: React.ReactNode;
    props: SchedulerViewPropsContextType;
    ranges: SchedulerViewRangesContextType;
    slots: SchedulerViewSlotsContextType;
    items: SchedulerViewItemsContextType;
    selectedSlots: SchedulerViewSelectedSlotsContextType;
    selectedItems: SchedulerViewSelectedItemsContextType;
    focusedItems: SchedulerViewFocusedItemsContextType;
    focusedSlots: SchedulerViewFocusedSlotsContextType;
}
/** @hidden */
export declare type SchedulerViewPropsContextType = SchedulerViewProps;
/** @hidden */
export declare const SchedulerViewPropsContext: React.Context<SchedulerViewProps>;
/** @hidden */
export declare const useSchedulerViewPropsContext: () => SchedulerViewProps;
/** @hidden */
export declare type SchedulerViewRangesContextType = Range[];
/** @hidden */
export declare const SchedulerViewRangesContext: React.Context<SchedulerViewRangesContextType>;
/** @hidden */
export declare const useSchedulerViewRangesContext: () => SchedulerViewRangesContextType;
/** @hidden */
export declare type SchedulerViewSlotsContextType = [React.RefObject<SchedulerSlotHandle>[], (action: CollectionAction<React.RefObject<SchedulerSlotHandle>>) => void];
/** @hidden */
export declare const SchedulerViewSlotsContext: React.Context<SchedulerViewSlotsContextType>;
/** @hidden */
export declare const useSchedulerViewSlotsContext: () => SchedulerViewSlotsContextType;
/** @hidden */
export declare type SchedulerViewItemsContextType = [React.RefObject<SchedulerItemHandle>[], (action: CollectionAction<React.RefObject<SchedulerItemHandle>>) => void];
/** @hidden */
export declare const SchedulerViewItemsContext: React.Context<SchedulerViewItemsContextType>;
/** @hidden */
export declare const useSchedulerViewItemsContext: () => SchedulerViewItemsContextType;
/** @hidden */
export declare type SchedulerViewSelectedSlotsContextType = [React.RefObject<SchedulerSlotHandle>[], (action: SchedulerSlotsSelectAction, event: React.SyntheticEvent) => void];
/** @hidden */
export declare const SchedulerViewSelectedSlotsContext: React.Context<SchedulerViewSelectedSlotsContextType>;
/** @hidden */
export declare const useSchedulerViewSelectedSlotsContext: () => SchedulerViewSelectedSlotsContextType;
/** @hidden */
export declare type SchedulerViewSelectedItemsContextType = [React.RefObject<SchedulerItemHandle>[], (action: SchedulerItemsSelectAction, event: React.SyntheticEvent) => void];
/** @hidden */
export declare const SchedulerViewSelectedItemsContext: React.Context<SchedulerViewSelectedItemsContextType>;
/** @hidden */
export declare const useSchedulerViewSelectedItemsContext: () => SchedulerViewSelectedItemsContextType;
/** @hidden */
export declare type SchedulerViewFocusedItemsContextType = [React.RefObject<SchedulerItemHandle>[], (action: SchedulerItemsFocusAction, event: React.SyntheticEvent) => void];
/** @hidden */
export declare const SchedulerViewFocusedItemsContext: React.Context<SchedulerViewFocusedItemsContextType>;
/** @hidden */
export declare const useSchedulerViewFocusedItemsContext: () => SchedulerViewFocusedItemsContextType;
/** @hidden */
export declare type SchedulerViewFocusedSlotsContextType = [React.RefObject<SchedulerSlotHandle>[], (action: SchedulerSlotsFocusAction, event: React.SyntheticEvent) => void];
/** @hidden */
export declare const SchedulerViewFocusedSlotsContext: React.Context<SchedulerViewFocusedSlotsContextType>;
/** @hidden */
export declare const useSchedulerViewFocusedSlotsContext: () => SchedulerViewFocusedSlotsContextType;
/** @hidden */
export declare const SchedulerViewContext: ({ children, props, ranges, slots, items, selectedSlots, selectedItems, focusedItems, focusedSlots }: SchedulerViewContextProps) => JSX.Element;
