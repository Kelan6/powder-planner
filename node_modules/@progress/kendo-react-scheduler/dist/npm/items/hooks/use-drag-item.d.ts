import { DataItem } from '../../models';
/**
 * Represents the available `action` types for the `SchedulerItemDragItemAction` objects.
 *
 * The available types are:
 * - `DRAG_ITEM_SET'`
 * - `DRAG_ITEM_START'`
 * - `DRAG_ITEM_DRAG'`
 * - `DRAG_ITEM_COMPLETE'`
 * - `DRAG_ITEM_COMPLETE_OCCURRENCE'`
 * - `DRAG_ITEM_COMPLETE_SERIES'`
 * - `DRAG_ITEM_RESET'`
 * - `DRAG_ITEM_DRAG_SELECTED`
 */
export declare enum DRAG_ITEM_ACTION {
    set = "DRAG_ITEM_SET",
    start = "DRAG_ITEM_START",
    drag = "DRAG_ITEM_DRAG",
    complete = "DRAG_ITEM_COMPLETE",
    completeOccurrence = "DRAG_ITEM_COMPLETE_OCCURRENCE",
    completeSeries = "DRAG_ITEM_COMPLETE_SERIES",
    reset = "DRAG_ITEM_RESET",
    dragSelected = "DRAG_ITEM_DRAG_SELECTED"
}
/**
 * Represents the object passed to the `drag-item` reducer.
 */
export interface SchedulerItemDragItemAction {
    type: DRAG_ITEM_ACTION;
    payload?: DataItem;
}
/** @hidden */
export declare const useDragItem: (config: {
    dataItem: DataItem;
    ignoreIsAllDay?: boolean;
    isAllDay?: boolean;
    onDataAction?: any;
}, state: [
    DataItem,
    DataItem,
    any
]) => any[];
