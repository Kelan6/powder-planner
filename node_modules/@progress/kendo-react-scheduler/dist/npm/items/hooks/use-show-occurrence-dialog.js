"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useShowOccurrenceDialog = exports.SHOW_OCCURRENCE_DIALOG_ACTION = void 0;
var useControlledState_1 = require("../../hooks/useControlledState");
/**
 * Represents the available `action` types for the `SchedulerItemShowOccurrenceDialogAction` objects.
 *
 * The available actions are:
 * - `SHOW_OCCURRENCE_DIALOG_SET`
 * - `SHOW_OCCURRENCE_DIALOG_OPEN`
 * - `SHOW_OCCURRENCE_DIALOG_CLOSE`
 * - `SHOW_OCCURRENCE_DIALOG_RESET`
 * - `SHOW_OCCURRENCE_DIALOG_TOGGLE`
 */
var SHOW_OCCURRENCE_DIALOG_ACTION;
(function (SHOW_OCCURRENCE_DIALOG_ACTION) {
    SHOW_OCCURRENCE_DIALOG_ACTION["set"] = "SHOW_OCCURRENCE_DIALOG_SET";
    SHOW_OCCURRENCE_DIALOG_ACTION["open"] = "SHOW_OCCURRENCE_DIALOG_OPEN";
    SHOW_OCCURRENCE_DIALOG_ACTION["close"] = "SHOW_OCCURRENCE_DIALOG_CLOSE";
    SHOW_OCCURRENCE_DIALOG_ACTION["reset"] = "SHOW_OCCURRENCE_DIALOG_RESET";
    SHOW_OCCURRENCE_DIALOG_ACTION["toggle"] = "SHOW_OCCURRENCE_DIALOG_TOGGLE";
})(SHOW_OCCURRENCE_DIALOG_ACTION = exports.SHOW_OCCURRENCE_DIALOG_ACTION || (exports.SHOW_OCCURRENCE_DIALOG_ACTION = {}));
var showOccurrenceDialogReducer = function (state, action) {
    switch (action.type) {
        case SHOW_OCCURRENCE_DIALOG_ACTION.reset:
            return false;
        case SHOW_OCCURRENCE_DIALOG_ACTION.set:
            return action.payload;
        case SHOW_OCCURRENCE_DIALOG_ACTION.open:
            return true;
        case SHOW_OCCURRENCE_DIALOG_ACTION.close:
            return false;
        case SHOW_OCCURRENCE_DIALOG_ACTION.toggle:
            return !state;
        default:
            return state;
    }
};
/** @hidden */
var useShowOccurrenceDialog = function (defaultProp, prop, callback) {
    var _a = (0, useControlledState_1.useControlledState)(defaultProp, prop, callback), showOccurrenceDialog = _a[0], setShowOccurrenceDialog = _a[1];
    var handleShowOccurrenceDialogAction = function (action) {
        var newShowOccurrenceDialog = showOccurrenceDialogReducer(showOccurrenceDialog, action);
        setShowOccurrenceDialog(newShowOccurrenceDialog);
    };
    return [showOccurrenceDialog, setShowOccurrenceDialog, handleShowOccurrenceDialogAction];
};
exports.useShowOccurrenceDialog = useShowOccurrenceDialog;
