"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useItemsFocus = exports.ITEMS_FOCUS_ACTION = void 0;
var utils_1 = require("../utils");
/**
 * Represents the available `action` types for the `SchedulerItemsFocusAction` objects.
 *
 * The available types are:
 * - `ITEMS_FOCUS_NEXT`
 * - `ITEMS_FOCUS_PREV`
 */
var ITEMS_FOCUS_ACTION;
(function (ITEMS_FOCUS_ACTION) {
    ITEMS_FOCUS_ACTION["next"] = "ITEMS_FOCUS_NEXT";
    ITEMS_FOCUS_ACTION["prev"] = "ITEMS_FOCUS_PREV";
})(ITEMS_FOCUS_ACTION = exports.ITEMS_FOCUS_ACTION || (exports.ITEMS_FOCUS_ACTION = {}));
/** @hidden */
var useItemsFocus = function (items) {
    var handleFocusedItemsAction = function (action, event) {
        switch (action.type) {
            case ITEMS_FOCUS_ACTION.next: {
                if (!action.item || !action.item.current || !items) {
                    return;
                }
                var next = (0, utils_1.findNextItem)(action.item, items, action.ignoreIsAllDay, false);
                if (next && next.current && next.current.element) {
                    event.preventDefault();
                    next.current.element.focus();
                }
                break;
            }
            case ITEMS_FOCUS_ACTION.prev: {
                if (!action.item || !action.item.current || !items) {
                    return;
                }
                var next = (0, utils_1.findNextItem)(action.item, items, action.ignoreIsAllDay, true);
                if (next && next.current && next.current.element) {
                    event.preventDefault();
                    next.current.element.focus();
                }
                break;
            }
            default:
                break;
        }
    };
    return [[], handleFocusedItemsAction];
};
exports.useItemsFocus = useItemsFocus;
