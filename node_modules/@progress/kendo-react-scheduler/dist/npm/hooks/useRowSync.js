"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRowSync = void 0;
var React = require("react");
var utils_1 = require("../views/common/utils");
var constants_1 = require("../constants");
var stripSelectorSymbol = function (str) { return str.slice(1, str.length); };
/** @hidden */
var useRowSync = function (args, inputs) {
    var element = args.element;
    var syncHeight = function () {
        if (!element || !element.current) {
            return;
        }
        var highest = [[]];
        var elements = Array
            .from(element.current.querySelectorAll(args.selector))
            .filter(function (el) { return !el.classList.contains(stripSelectorSymbol(args.applyTo)); });
        elements.forEach(function (el) {
            var height = el.clientHeight;
            var x = el.getAttribute(args.horizontalAttribute);
            var y = el.getAttribute(args.verticalAttribute);
            if (x === null || y === null) {
                return;
            }
            if (!highest[x]) {
                highest[x] = [];
            }
            if (!highest[x][y] || height > highest[x][y]) {
                highest[x][y] = height - constants_1.BORDER_WIDTH;
            }
        });
        var targets = Array.from(element.current.querySelectorAll(args.applyTo));
        targets.forEach(function (el) {
            var x = el.getAttribute(args.horizontalAttribute);
            var y = el.getAttribute(args.verticalAttribute);
            if (x === null || y === null) {
                return;
            }
            var slotPadding = (0, utils_1.getPadding)(el);
            var height = highest[x][y] - slotPadding;
            (0, utils_1.setRect)(el, { height: height }, true);
        });
    };
    React.useEffect(syncHeight, inputs);
};
exports.useRowSync = useRowSync;
