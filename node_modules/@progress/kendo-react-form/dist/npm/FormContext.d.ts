import * as React from 'react';
import { FieldValidatorType } from './interfaces/FieldValidator';
/** @hidden */
export declare type FormContextType = {
    onSubmit: (event: React.SyntheticEvent<any>) => void;
    onChange: (name: string, options: {
        value: any;
    }) => void;
    onFocus: (name: string) => void;
    onBlur: (name: string) => void;
    onUnshift: (name: string, options: {
        value: any;
    }) => void;
    onPush: (name: string, options: {
        value: any;
    }) => void;
    onInsert: (name: string, options: {
        index: number;
        value: any;
    }) => void;
    onPop: (name: string) => any;
    onRemove: (name: string, options: {
        index: number;
    }) => any;
    onReplace: (name: string, options: {
        index: number;
        value: any;
    }) => void;
    onMove: (name: string, options: {
        prevIndex: number;
        nextIndex: number;
    }) => void;
    registerField: (name: string, validator: FieldValidatorType | FieldValidatorType[] | undefined) => void;
    valueGetter: (name: string) => any;
    errors: {
        [name: string]: string;
    };
    touched: {
        [name: string]: boolean;
    };
    visited: {
        [name: string]: boolean;
    };
    modified: {
        [name: string]: boolean;
    };
    id: string;
};
/** @hidden */
export declare const FormContext: React.Context<FormContextType | null>;
